@if (ShowConfirmation)
{
    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@confirmationTitle</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                        @onclick="() => OnConfirmationChange(false)">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @confirmationMessage
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal"
                        @onclick="() => OnConfirmationChange(false)">
                        Không
                    </button>
                    <button type="button" class="btn btn-danger btn-sm"
                        @onclick="() => OnConfirmationChange(true)">
                        Có
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    protected bool ShowConfirmation { get; set; }

    private string confirmationTitle { get; set; }
    private string confirmationMessage { get; set; }

    [Parameter]
    public string ConfirmationTitle { get => confirmationTitle; set => SetTitle(value); }

    [Parameter]
    public string ConfirmationMessage { get => confirmationMessage; set => SetMessage(value); }

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    public void Show()
    {
        ShowConfirmation = true;
        StateHasChanged();
    }

    public void SetTitle(string value)
    {
        confirmationTitle = value;
        StateHasChanged();
    }

    public void SetMessage(string value)
    {
        confirmationMessage = value;
        StateHasChanged();
    }

    protected async Task OnConfirmationChange(bool value)
    {
        ShowConfirmation = false;
        await ConfirmationChanged.InvokeAsync(value);
    }
}