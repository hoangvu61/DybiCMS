@using Dybi.App.Services;
@using Web.Models;
@using System.IO;
@using Web.Models.Enums;
@using Web.Models.SeedWork;

@inject IWarehouseApiClient WarehouseApiClient;

<div class="form-group">
    <div class="input-group input-group-sm mb-3">
        <span class="input-group-text">Từ ngày</span>
        <input type="date" value="@Model.FromDate?.ToString("dd/MM/yyyy")" @onchange="@(() => OnSearch.InvokeAsync(Model))" />
        <span class="input-group-text">Đến ngày</span>
        <input type="date" value="@Model.ToDate?.ToString("dd/MM/yyyy")" @onchange="@(() => OnSearch.InvokeAsync(Model))" />
        <span class="input-group-text">Tìm tên hoặc số điện thoại</span>
        <input @bind="Model.Key" @bind:event="oninput" @onkeyup="KeyChange" @onchange="KeyChange" />
        <span class="input-group-text">Loại</span>
        <InputSelect class="form-select form-select-sm" ValueExpression="@(()=>Model.Type)"
                     Value="@Model.Type"
                     ValueChanged="@((int value) => TypeChange(value))">
            <option value="0">Chọn loại</option>
            <option value="1">Nợ</option>
            <option value="2">Trả nợ</option>
        </InputSelect>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<DebtCustomerSearch> OnSearch { set; get; }

    private DebtCustomerSearch Model = new DebtCustomerSearch();

    private async Task KeyChange()
    {
        if (Model.Key.Length > 3)
            await OnSearch.InvokeAsync(Model);
    }

    private async Task TypeChange(int value)
    {
        Model.Type = value;
        await OnSearch.InvokeAsync(Model);
    }
}