@page "/"
@attribute [Authorize]

@using Dybi.App.Pages.Components
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization
@using Dybi.App.Services;
@using Web.Models;
@using Microsoft.Extensions.Configuration
@using Web.Models.Enums;
@using Web.Models.SeedWork;

@inject NavigationManager NavigationManager
@inject IConfiguration Configuration;
@inject IOrderApiClient OrderApiClient;
@inject IWarehouseApiClient WarehouseApiClient;
@inject GlobalVariables Global;

<h1 class="text-center">Phần mềm quản lý Bán hàng - Xuất nhập kho</h1>
<section>
    <div class="row">
        <div class="col">
            <!-- small box -->
            <div class="small-box bg-warning">
                <div class="inner">
                    <h3>@NewOrder</h3>
                    <p>Đơn hàng mới</p>
                </div>
                <div class="icon">
                    <span class="oi oi-cart"></span>
                </div>
                <a href="/Sales/Orders" class="small-box-footer">Chi tiết <span class="oi oi-arrow-circle-right"></span></a>
            </div>
        </div>
        <div class="col">
            <!-- small box -->
            <div class="small-box bg-danger">
                <div class="inner">
                    <h3>@Inventory</h3>
                    <p>Hàng tồn sắp hết</p>
                </div>
                <div class="icon">
                    <span class="oi oi-bell"></span>
                </div>
                <a href="/warehouses/Inventories?IsAlertEmpty=true" class="small-box-footer">Chi tiết <span class="oi oi-arrow-circle-right"></span></a>
            </div>
        </div>
        <div class="col">
            <!-- small box -->
            <div class="small-box bg-primary" style="height:100%">
                <a class="button" href="sales/ordercreate">
                    <i class="oi oi-plus"></i>
                    <span class="small-box-footer">Tạo đơn hàng</span>
                </a>
            </div>
        </div>
    </div>
</section>
<SetConfig @ref="SetConfigDialog"></SetConfig>

@code {
    private PagingParameters NewOrderPaging = new PagingParameters();
    private WarehouseInventorySearch WarehouseInventorySearch = new WarehouseInventorySearch();

    protected int NewOrder { get; set; }
    protected int Inventory { get; set; }

    protected SetConfig SetConfigDialog { set; get; }

    protected async override Task OnInitializedAsync()
    {
        try
        {
            var pagingOrderResponse = await OrderApiClient.GetNewOrders(NewOrderPaging);
            NewOrder = pagingOrderResponse.MetaData.TotalCount;
        }
        catch (Exception ex)
        {
            if (ex.Message != null && ex.Message.Contains("Unauthorized"))
                NavigationManager.NavigateTo("Logout");
        }

        WarehouseInventorySearch.IsAlertEmpty = true;
        var inventoryResponse = await WarehouseApiClient.GetInventories(WarehouseInventorySearch);
        Inventory = inventoryResponse.MetaData.TotalCount;
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            if (Global.Configs == null) Global.Configs = await WarehouseApiClient.GetConfigs();
            if (Global.Configs.Count == 0)
            {
                SetConfigDialog.Show();
            }
        }
    }
}