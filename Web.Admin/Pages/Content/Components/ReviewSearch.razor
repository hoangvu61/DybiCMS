@using Web.Admin.Services;
@using Web.Models;
@using System.IO;
@using Web.Models.Enums;
@using Web.Models.SeedWork;

@inject IContentApiClient ContentApiClient;

<div class="form-group mb-3">
    <div class="input-group input-group-sm">
        <div class="form-check form-check-inline">
            <input name="Approved" type="radio" class="form-check-input mt-0" @onchange="@(() => ApprovedChange(null))" checked="@(Model.Approved == null)" /> Tất cả &nbsp;
            <input name="Approved" type="radio" class="form-check-input mt-0" @onchange="@(() => ApprovedChange(false))" checked="@(Model.Approved == false)" /> Chưa duyệt &nbsp;
            <input name="Approved" type="radio" class="form-check-input mt-0" @onchange="@(() => ApprovedChange(true))" checked="@(Model.Approved == true)" /> Đã duyệt &nbsp;
        </div>
        <input class="form-control" @bind="Model.Key" @bind:event="oninput" @onkeyup="TextChange" @onchange="TextChange" placeholder="Tìm tên hoặc số điện thoại" />
        <button type="button" class="btn btn-primary" @onclick="SearchForm">Tìm</button>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<ReviewListSearch> OnSearch { set; get; }

    [Parameter]
    public bool? Approved { set; get; }

    private ReviewListSearch Model = new ReviewListSearch();

    protected async override Task OnParametersSetAsync()
    {
        if (Approved != null)
        {
            Model.Approved = Approved;
        }
    }
    private async Task TextChange()
    {
        if (Model.Key.Length > 3)
            await OnSearch.InvokeAsync(Model);
    }
    private async Task ApprovedChange(bool? approve)
    {
        Model.Approved = approve;
        await OnSearch.InvokeAsync(Model);
    }
    private async Task SearchForm()
    {
        await OnSearch.InvokeAsync(Model);
    }
}