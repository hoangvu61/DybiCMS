@using Web.Admin.Services;
@using Web.Models;

@inject IToastService ToastService;
@inject IOrderApiClient OrderApiClient;
@inject IConfiguration Configuration;

@if (ShowDialog)
{
    <div class="modal fade show d-block" id="assignModel" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-sm" role="document">
            <EditForm Model="Model" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Sửa sản phẩm</h5>
                        <button type="button" class="close" data-dismiss="modal" @onclick="()=>Hide()" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <h2>@Model.Name</h2>
                        <div style="text-align:center">
                            <img src="@(BackendApiUrl + "/" + Model.Image.FullPath)" asp-append-version="true" width="50px" />
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Giá:</label>
                            <InputNumber class="form-control form-control-sm" @bind-Value="Model.Price" @bind-Value:format="N0"></InputNumber>
                            <ValidationMessage For="()=> Model.Price"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="col-form-label">Số lượng:</label>
                            <InputNumber class="form-control form-control-sm" @bind-Value="Model.Quantity" @bind-Value:format="N0"></InputNumber>
                            <ValidationMessage For="()=> Model.Quantity"></ValidationMessage>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-xs" @onclick="()=>Hide()" data-dismiss="modal">Đóng</button>
                        <button type="submit" class="btn btn-primary btn-xs">Lưu</button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    protected bool ShowDialog { get; set; }

    private string BackendApiUrl { get; set; }
    private Guid OrderId { get; set; }
    private OrderProductDto Model { set; get; }

    [Parameter]
    public EventCallback CloseEventCallback { get; set; }

    public void Show(Guid orderId, OrderProductDto dto)
    {
        BackendApiUrl = Configuration["BackendApiUrl"];
        OrderId = orderId;
        Model = dto;
        ShowDialog = true;
        StateHasChanged();
    }

    private void Hide()
    {
        ShowDialog = false;
        StateHasChanged();
    }

    protected async Task HandleSubmit()
    {
        var result = await OrderApiClient.UpdateOrderProduct(OrderId, Model);
        if (result)
        {
            ShowDialog = false;
            await CloseEventCallback.InvokeAsync();
            ToastService.ShowInfo("Lưu thành công");
        }
        else
        {
            ToastService.ShowError("Lưu không thành công");
        }
    }
}