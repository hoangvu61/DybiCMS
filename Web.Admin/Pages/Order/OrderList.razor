@page "/OrderList"
@attribute [Authorize]

@using Microsoft.AspNetCore.Authorization;
@using Web.Admin.Components;
@using Web.Admin.Pages.Content.Components;
@using Web.Admin.Pages.Order.Components;
@using Web.Admin.Services;
@using Web.Models;
@using Web.Models.SeedWork;
@using Microsoft.Extensions.Configuration

@inject IConfiguration Configuration
@inject IToastService ToastService;
@inject IOrderApiClient OrderApiClient;


<section class="content-header">
    <div class="container-fluid">
        <h1 class="m-0">Quản lý đơn hàng</h1>
    </div>
</section>

<section class="content">
    <div class="container-fluid">
        <div class="card card-primary card-outline card-outline-tabs">
            <div class="card-header p-0 border-bottom-0">
                <ul class="nav nav-tabs" id="custom-tabs-four-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="custom-tabs-four-home-tab" data-toggle="pill" href="#NewOrders" role="tab" aria-controls="NewOrders" aria-selected="true">Mới (@NewMetaData.TotalCount)</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-profile-tab" data-toggle="pill" href="#ConfirmOrders" role="tab" aria-controls="ConfirmOrders" aria-selected="false">Đã xác nhận (@ConfirmMetaData.TotalCount)</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-messages-tab" data-toggle="pill" href="#SendOrders" role="tab" aria-controls="SendOrders" aria-selected="false">Đã gửi (@SendMetaData.TotalCount)</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-settings-tab" data-toggle="pill" href="#ReceiveOrders" role="tab" aria-controls="ReceiveOrders" aria-selected="false">Đã nhận (@ReceiveMetaData.TotalCount)</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-settings-tab" data-toggle="pill" href="#CancelOrders" role="tab" aria-controls="CancelOrders" aria-selected="false">Đã hủy (@CancelMetaData.TotalCount)</a>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content" id="custom-tabs-four-tabContent">
                    <div class="tab-pane fade show active" id="NewOrders" role="tabpanel" aria-labelledby="custom-tabs-four-home-tab">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Mã đơn</th>
                                    <th>Khách hàng</th>
                                    <th style="text-align:right">Tổng tiền</th>
                                    <th style="text-align:center">Ngày tạo</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in NewOrders)
                                {
                                    <tr>
                                        <td>@order.Id</td>
                                        <td>
                                            <div>@order.CustomerName - @order.CustomerPhone</div>
                                            <div>@order.CustomerAddress</div>
                                        </td>
                                        <td style="text-align:right">@order.TotalPrice.ToString("N0")</td>
                                        <td style="text-align:center">@order.Date.ToString("dd/MM/yyyy")</td>
                                        <td style="text-align:right;width:100px">
                                            <button class="btn btn-info btn-xs" @onclick="() => OrderDetailDialog.Show(order.Id)">Xem</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="7">
                                        <Pagination MetaData="NewMetaData" Spread="2" SelectedPage="SelectedPageNew"></Pagination>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="tab-pane fade" id="ConfirmOrders" role="tabpanel" aria-labelledby="custom-tabs-four-profile-tab">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Mã đơn</th>
                                    <th>Khách hàng</th>
                                    <th style="text-align:right">Tổng tiền</th>
                                    <th style="text-align:center">Ngày tạo</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in ConfirmOrders)
                                {
                                    <tr>
                                        <td>@order.Id</td>
                                        <td>
                                            <div>@order.CustomerName - @order.CustomerPhone</div>
                                            <div>@order.CustomerAddress</div>
                                        </td>
                                        <td style="text-align:right">@order.TotalPrice.ToString("N0")</td>
                                        <td style="text-align:center">@order.Date.ToString("dd/MM/yyyy")</td>
                                        <td style="text-align:right;width:100px">
                                            <button class="btn btn-info btn-xs" @onclick="() => OrderDetailDialog.Show(order.Id)">Xem</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="7">
                                        <Pagination MetaData="ConfirmMetaData" Spread="2" SelectedPage="SelectedPageConfirm"></Pagination>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="tab-pane fade" id="SendOrders" role="tabpanel" aria-labelledby="custom-tabs-four-messages-tab">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Mã đơn</th>
                                    <th>Khách hàng</th>
                                    <th style="text-align:right">Tổng tiền</th>
                                    <th style="text-align:center">Ngày tạo</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in SendOrders)
                                {
                                    <tr>
                                        <td>@order.Id</td>
                                        <td>
                                            <div>@order.CustomerName - @order.CustomerPhone</div>
                                            <div>@order.CustomerAddress</div>
                                        </td>
                                        <td style="text-align:right">@order.TotalPrice.ToString("N0")</td>
                                        <td style="text-align:center">@order.Date.ToString("dd/MM/yyyy")</td>
                                        <td style="text-align:right;width:100px">
                                            <button class="btn btn-info btn-xs" @onclick="() => OrderDetailDialog.Show(order.Id)">Xem</button>
                                         </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="7">
                                        <Pagination MetaData="SendMetaData" Spread="2" SelectedPage="SelectedPageSend"></Pagination>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="tab-pane fade" id="ReceiveOrders" role="tabpanel" aria-labelledby="custom-tabs-four-settings-tab">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Mã đơn</th>
                                    <th>Khách hàng</th>
                                    <th style="text-align:right">Tổng tiền</th>
                                    <th style="text-align:center">Ngày tạo</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in ReceiveOrders)
                                {
                                    <tr>
                                        <td>@order.Id</td>
                                        <td>
                                            <div>@order.CustomerName - @order.CustomerPhone</div>
                                            <div>@order.CustomerAddress</div>
                                        </td>
                                        <td style="text-align:right">@order.TotalPrice.ToString("N0")</td>
                                        <td style="text-align:center">@order.Date.ToString("dd/MM/yyyy")</td>
                                        <td style="text-align:right;width:100px">
                                            <button class="btn btn-info btn-xs" @onclick="() => OrderDetailDialog.Show(order.Id)">Xem</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="7">
                                        <Pagination MetaData="ReceiveMetaData" Spread="2" SelectedPage="SelectedPageReceive"></Pagination>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="tab-pane fade" id="CancelOrders" role="tabpanel" aria-labelledby="custom-tabs-four-settings-tab">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Mã đơn</th>
                                    <th>Khách hàng</th>
                                    <th style="text-align:right">Tổng tiền</th>
                                    <th style="text-align:center">Ngày tạo</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in CancelOrders)
                                {
                                    <tr>
                                        <td>@order.Id</td>
                                        <td>
                                            <div>@order.CustomerName - @order.CustomerPhone</div>
                                            <div>@order.CustomerAddress</div>
                                        </td>
                                        <td style="text-align:right">@order.TotalPrice.ToString("N0")</td>
                                        <td style="text-align:center">@order.Date.ToString("dd/MM/yyyy")</td>
                                        <td style="text-align:right;width:100px">
                                            <button class="btn btn-info btn-xs" @onclick="() => OrderDetailDialog.Show(order.Id)">Xem</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="7">
                                        <Pagination MetaData="CancelMetaData" Spread="2" SelectedPage="SelectedPageCancel"></Pagination>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
            <!-- /.card -->
        </div>

        <Confirmation ConfirmationMessage="Bạn có chắc chắn xóa?"
                      ConfirmationTitle="Xóa đơn hàng"
                      @ref="DeleteConfirmation"
                      ConfirmationChanged="OnConfirmDelete">
        </Confirmation>

        <OrderDetail @ref="OrderDetailDialog" EventCallback="GetOrers"></OrderDetail>

    </div>
</section>

@code {
    protected Confirmation DeleteConfirmation { set; get; }
    protected OrderDetail OrderDetailDialog { set; get; }

    private List<OrderDto> NewOrders = new List<OrderDto>();
    private List<OrderDto> ConfirmOrders = new List<OrderDto>();
    private List<OrderDto> SendOrders = new List<OrderDto>();
    private List<OrderDto> ReceiveOrders = new List<OrderDto>();
    private List<OrderDto> CancelOrders = new List<OrderDto>();

    private Guid DeleteId { set; get; }

    private PagingParameters NewOrderPaging { set; get; } = new PagingParameters(20);
    private PagingParameters ConfirmOrderPaging { set; get; } = new PagingParameters(20);
    private PagingParameters SendOrderPaging { set; get; } = new PagingParameters(20);
    private PagingParameters ReceiveOrderPaging { set; get; } = new PagingParameters(20);
    private PagingParameters CancelOrderPaging { set; get; } = new PagingParameters(20);
    public MetaData NewMetaData { get; set; } = new MetaData();
    public MetaData ConfirmMetaData { get; set; } = new MetaData();
    public MetaData SendMetaData { get; set; } = new MetaData();
    public MetaData ReceiveMetaData { get; set; } = new MetaData();
    public MetaData CancelMetaData { get; set; } = new MetaData();

    [CascadingParameter]
    private Error Error { set; get; }

    protected override async Task OnInitializedAsync()
    {
        await GetOrers();
    }

    private async Task GetOrers()
    {
        await GetNews();
        await GetConfirms();
        await GetSends();
        await GetReceives();
        await GetCancels();
    }

    private async Task GetNews()
    {
        try
        {
            var pagingResponse = await OrderApiClient.GetNewOrders(NewOrderPaging);
            NewOrders = pagingResponse.Items;
            NewMetaData = pagingResponse.MetaData;
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
        }
    }
    private async Task GetConfirms()
    {
        try
        {
            var pagingResponse = await OrderApiClient.GetConfirmOrders(ConfirmOrderPaging);
            ConfirmOrders = pagingResponse.Items;
            ConfirmMetaData = pagingResponse.MetaData;
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
        }
    }
    private async Task GetSends()
    {
        try
        {
            var pagingResponse = await OrderApiClient.GetSendOrders(SendOrderPaging);
            SendOrders = pagingResponse.Items;
            SendMetaData = pagingResponse.MetaData;
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
        }
    }
    private async Task GetReceives()
    {
        try
        {
            var pagingResponse = await OrderApiClient.GetReceiveOrders(ReceiveOrderPaging);
            ReceiveOrders = pagingResponse.Items;
            ReceiveMetaData = pagingResponse.MetaData;
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
        }
    }
    private async Task GetCancels()
    {
        try
        {
            var pagingResponse = await OrderApiClient.GetCancelOrders(CancelOrderPaging);
            CancelOrders = pagingResponse.Items;
            CancelMetaData = pagingResponse.MetaData;
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
        }
    }

    private async Task SelectedPageNew(int page)
    {
        NewOrderPaging.PageNumber = page;
        await GetNews();
    }
    private async Task SelectedPageConfirm(int page)
    {
        ConfirmOrderPaging.PageNumber = page;
        await GetConfirms();
    }
    private async Task SelectedPageSend(int page)
    {
        SendOrderPaging.PageNumber = page;
        await GetSends();
    }
    private async Task SelectedPageReceive(int page)
    {
        ReceiveOrderPaging.PageNumber = page;
        await GetReceives();
    }
    private async Task SelectedPageCancel(int page)
    {
        CancelOrderPaging.PageNumber = page;
        await GetCancels();
    }

    public async Task OnConfirmDelete(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            var result = await OrderApiClient.DeleteOrder(DeleteId);
            if (result)
            {
                ToastService.ShowWarning($"Đã xóa {DeleteId}");
                if (NewOrders.Any(e => e.Id == DeleteId)) await GetNews();
                else if (ConfirmOrders.Any(e => e.Id == DeleteId)) await GetConfirms();
            }
            else ToastService.ShowError("Xóa không thành công");

        }
    }
    public void OnDelete(Guid deleteId)
    {
        DeleteId = deleteId;
        DeleteConfirmation.Show();
    }
}