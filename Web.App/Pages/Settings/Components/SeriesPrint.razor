@using Web.App.Components
@using Web.App.Services;
@using Web.Models;
@using System.IO;
@using Web.Models.Enums
@inject IToastService ToastService;
@inject IWarehouseApiClient WarehouseApiClient;
@inject IJSRuntime JS

@if (ShowDialog)
{
    <div class="modal fade show d-block" id="assignModel" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-xl modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">In series</h5>
                    <button type="button" class="close" data-dismiss="modal" @onclick="()=>Hide()" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="mb-3"><label>Sản phẩm:</label> @Model.Title @(!string.IsNullOrEmpty(Model.Code) ? "(Mã: " + Model.Code + ")" : "")</div>
                    <div class="mb-3"><label>Danh mục:</label> @Model.CategoryName</div>
                    <div class="mb-3"><label>Số lượng:</label> @Model.CountSeries</div>
                    <div class="form-group mb-3">
                        <div class="input-group input-group-xs">
                            <label class="input-group-text">Loại mã</label>
                            <InputSelect class="form-select" ValueExpression="@(()=>CodeType)"
                                       Value="@CodeType"
                                       ValueChanged="@((string value) => ShowCodes(value))">
                                @foreach (var type in DataSource.BarCodeTypes)
                                {
                                    <option value="@type.Key">@type.Key - @type.Value</option>
                                }
                            </InputSelect>
                            <button class="btn btn-primary" @onclick="Print">In</button>
                        </div>
                    </div>
                    <hr />
                    <div id="listCode">
                        @foreach (var image in Images)
                        {
                            <span style="border: 1px solid #000; padding:5px; display:block; float:left">
                                <img src="@image" style="height:50px;" />
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private WarehouseProductDto Model { set; get; } = new WarehouseProductDto();
    private List<string> Images { set; get; } = new List<string>();
    private bool ShowDialog { set; get; }
    private string CodeType { set; get; } = "CODE_128";

    [Parameter]
    public EventCallback<bool> EventCallback { get; set; }

    public async Task Show(WarehouseProductDto model)
    {
        Model = model;
        Images = await WarehouseApiClient.ImageCodesByProduct(Model.Id, CodeType);

        ShowDialog = true;

        StateHasChanged();
    }

    private void Hide()
    {
        ShowDialog = false;
        StateHasChanged();
    }

    private async Task ShowCodes(string type)
    {
        CodeType = type;
        Images = await WarehouseApiClient.ImageCodesByProduct(Model.Id, CodeType);
    }

    private async Task Print()
    {
        await JS.InvokeVoidAsync("printComponent", "#listCode");
    }
}