@using Microsoft.Extensions.Configuration;
@using Web.Models.Enums;
@using Web.Models.SeedWork;
@using Web.Backend.Services;
@using Web.Models;

@inject IToastService ToastService;
@inject ICompanyApiClient CompanyApiClient;

@if(Model != null)
{
    <div class="card card-outline card-info">
    <EditForm Model="Model" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="card-header">
                <h3 class="card-title">
                    <i class="icon fas fa-info"></i>
                    SEO
                </h3>
                <div class="card-tools">
                    <button type="submit" class="btn btn-success btn-xs">Lưu</button>
                </div>
            </div>
        <div class="card-body">
                <div class="form-group input-group input-group-sm">
                    <div class="input-group-prepend">
                        <span class="input-group-text">Meta Title</span>
                    </div>
                    <InputText @bind-Value="Model.Title" class="form-control form-control-sm"></InputText>
                    <ValidationMessage For="()=> Model.Title"></ValidationMessage>
            </div>
                <div class="form-group input-group input-group-sm">
                    <div class="input-group-prepend">
                        <span class="input-group-text">Meta Description</span>
                    </div>
                    <InputTextArea @bind-Value="Model.MetaDescription" class="form-control form-control-sm"></InputTextArea>
                    <ValidationMessage For="()=> Model.MetaDescription"></ValidationMessage>
            </div>
            <div class="form-group input-group input-group-sm">
                    <div class="input-group-prepend">
                        <span class="input-group-text">Meta Keyword</span>
                    </div>
                    <InputText @bind-Value="Model.MetaKeyWord" class="form-control form-control-sm"></InputText>
                    <ValidationMessage For="()=> Model.MetaKeyWord"></ValidationMessage>
            </div>
        </div>
    </EditForm>
</div>
}

@code {
    [Parameter]
    public string LanguageCode { set; get; }

    private SEOWebdto Model { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(LanguageCode))
        {
            Model = await CompanyApiClient.GetWebInfo(LanguageCode);
        }
    }

    public async Task Load()
    {
        Model = await CompanyApiClient.GetWebInfo(LanguageCode);
        StateHasChanged();
    }

    private async Task HandleSubmit()
    {
        var result = await CompanyApiClient.UpdateWebInfo(Model);
        if (result) ToastService.ShowInfo("Cập nhật thành công");
        else ToastService.ShowError("Cập nhật không thành công");
    }
}
